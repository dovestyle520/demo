<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.marquess.demo.dao.RefundResultMapper">
  <resultMap id="BaseResultMap" type="com.marquess.demo.model.RefundResult">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 06 16:21:59 CST 2018.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="transaction_id" jdbcType="VARCHAR" property="transactionId" />
    <result column="out_trade_no" jdbcType="VARCHAR" property="outTradeNo" />
    <result column="refund_id" jdbcType="VARCHAR" property="refundId" />
    <result column="out_refund_no" jdbcType="VARCHAR" property="outRefundNo" />
    <result column="total_fee" jdbcType="INTEGER" property="totalFee" />
    <result column="settlement_total_fee" jdbcType="INTEGER" property="settlementTotalFee" />
    <result column="refund_fee" jdbcType="INTEGER" property="refundFee" />
    <result column="settlement_refund_fee" jdbcType="INTEGER" property="settlementRefundFee" />
    <result column="refund_status" jdbcType="VARCHAR" property="refundStatus" />
    <result column="success_time" jdbcType="VARCHAR" property="successTime" />
    <result column="refund_recv_accout" jdbcType="VARCHAR" property="refundRecvAccout" />
    <result column="refund_account" jdbcType="VARCHAR" property="refundAccount" />
    <result column="refund_request_source" jdbcType="VARCHAR" property="refundRequestSource" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 06 16:21:59 CST 2018.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 06 16:21:59 CST 2018.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 06 16:21:59 CST 2018.
    -->
    id, transaction_id, out_trade_no, refund_id, out_refund_no, total_fee, settlement_total_fee, 
    refund_fee, settlement_refund_fee, refund_status, success_time, refund_recv_accout, 
    refund_account, refund_request_source, create_time
  </sql>
  <select id="selectByExample" parameterType="com.marquess.demo.model.RefundResultExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 06 16:21:59 CST 2018.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from refund_result
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 06 16:21:59 CST 2018.
    -->
    select 
    <include refid="Base_Column_List" />
    from refund_result
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 06 16:21:59 CST 2018.
    -->
    delete from refund_result
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.marquess.demo.model.RefundResultExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 06 16:21:59 CST 2018.
    -->
    delete from refund_result
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.marquess.demo.model.RefundResult">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 06 16:21:59 CST 2018.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into refund_result (transaction_id, out_trade_no, refund_id, 
      out_refund_no, total_fee, settlement_total_fee, 
      refund_fee, settlement_refund_fee, refund_status, 
      success_time, refund_recv_accout, refund_account, 
      refund_request_source, create_time)
    values (#{transactionId,jdbcType=VARCHAR}, #{outTradeNo,jdbcType=VARCHAR}, #{refundId,jdbcType=VARCHAR}, 
      #{outRefundNo,jdbcType=VARCHAR}, #{totalFee,jdbcType=INTEGER}, #{settlementTotalFee,jdbcType=INTEGER}, 
      #{refundFee,jdbcType=INTEGER}, #{settlementRefundFee,jdbcType=INTEGER}, #{refundStatus,jdbcType=VARCHAR}, 
      #{successTime,jdbcType=VARCHAR}, #{refundRecvAccout,jdbcType=VARCHAR}, #{refundAccount,jdbcType=VARCHAR}, 
      #{refundRequestSource,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.marquess.demo.model.RefundResult">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 06 16:21:59 CST 2018.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into refund_result
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="transactionId != null">
        transaction_id,
      </if>
      <if test="outTradeNo != null">
        out_trade_no,
      </if>
      <if test="refundId != null">
        refund_id,
      </if>
      <if test="outRefundNo != null">
        out_refund_no,
      </if>
      <if test="totalFee != null">
        total_fee,
      </if>
      <if test="settlementTotalFee != null">
        settlement_total_fee,
      </if>
      <if test="refundFee != null">
        refund_fee,
      </if>
      <if test="settlementRefundFee != null">
        settlement_refund_fee,
      </if>
      <if test="refundStatus != null">
        refund_status,
      </if>
      <if test="successTime != null">
        success_time,
      </if>
      <if test="refundRecvAccout != null">
        refund_recv_accout,
      </if>
      <if test="refundAccount != null">
        refund_account,
      </if>
      <if test="refundRequestSource != null">
        refund_request_source,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="transactionId != null">
        #{transactionId,jdbcType=VARCHAR},
      </if>
      <if test="outTradeNo != null">
        #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="refundId != null">
        #{refundId,jdbcType=VARCHAR},
      </if>
      <if test="outRefundNo != null">
        #{outRefundNo,jdbcType=VARCHAR},
      </if>
      <if test="totalFee != null">
        #{totalFee,jdbcType=INTEGER},
      </if>
      <if test="settlementTotalFee != null">
        #{settlementTotalFee,jdbcType=INTEGER},
      </if>
      <if test="refundFee != null">
        #{refundFee,jdbcType=INTEGER},
      </if>
      <if test="settlementRefundFee != null">
        #{settlementRefundFee,jdbcType=INTEGER},
      </if>
      <if test="refundStatus != null">
        #{refundStatus,jdbcType=VARCHAR},
      </if>
      <if test="successTime != null">
        #{successTime,jdbcType=VARCHAR},
      </if>
      <if test="refundRecvAccout != null">
        #{refundRecvAccout,jdbcType=VARCHAR},
      </if>
      <if test="refundAccount != null">
        #{refundAccount,jdbcType=VARCHAR},
      </if>
      <if test="refundRequestSource != null">
        #{refundRequestSource,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.marquess.demo.model.RefundResultExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 06 16:21:59 CST 2018.
    -->
    select count(*) from refund_result
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 06 16:21:59 CST 2018.
    -->
    update refund_result
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.transactionId != null">
        transaction_id = #{record.transactionId,jdbcType=VARCHAR},
      </if>
      <if test="record.outTradeNo != null">
        out_trade_no = #{record.outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.refundId != null">
        refund_id = #{record.refundId,jdbcType=VARCHAR},
      </if>
      <if test="record.outRefundNo != null">
        out_refund_no = #{record.outRefundNo,jdbcType=VARCHAR},
      </if>
      <if test="record.totalFee != null">
        total_fee = #{record.totalFee,jdbcType=INTEGER},
      </if>
      <if test="record.settlementTotalFee != null">
        settlement_total_fee = #{record.settlementTotalFee,jdbcType=INTEGER},
      </if>
      <if test="record.refundFee != null">
        refund_fee = #{record.refundFee,jdbcType=INTEGER},
      </if>
      <if test="record.settlementRefundFee != null">
        settlement_refund_fee = #{record.settlementRefundFee,jdbcType=INTEGER},
      </if>
      <if test="record.refundStatus != null">
        refund_status = #{record.refundStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.successTime != null">
        success_time = #{record.successTime,jdbcType=VARCHAR},
      </if>
      <if test="record.refundRecvAccout != null">
        refund_recv_accout = #{record.refundRecvAccout,jdbcType=VARCHAR},
      </if>
      <if test="record.refundAccount != null">
        refund_account = #{record.refundAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.refundRequestSource != null">
        refund_request_source = #{record.refundRequestSource,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 06 16:21:59 CST 2018.
    -->
    update refund_result
    set id = #{record.id,jdbcType=BIGINT},
      transaction_id = #{record.transactionId,jdbcType=VARCHAR},
      out_trade_no = #{record.outTradeNo,jdbcType=VARCHAR},
      refund_id = #{record.refundId,jdbcType=VARCHAR},
      out_refund_no = #{record.outRefundNo,jdbcType=VARCHAR},
      total_fee = #{record.totalFee,jdbcType=INTEGER},
      settlement_total_fee = #{record.settlementTotalFee,jdbcType=INTEGER},
      refund_fee = #{record.refundFee,jdbcType=INTEGER},
      settlement_refund_fee = #{record.settlementRefundFee,jdbcType=INTEGER},
      refund_status = #{record.refundStatus,jdbcType=VARCHAR},
      success_time = #{record.successTime,jdbcType=VARCHAR},
      refund_recv_accout = #{record.refundRecvAccout,jdbcType=VARCHAR},
      refund_account = #{record.refundAccount,jdbcType=VARCHAR},
      refund_request_source = #{record.refundRequestSource,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.marquess.demo.model.RefundResult">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 06 16:21:59 CST 2018.
    -->
    update refund_result
    <set>
      <if test="transactionId != null">
        transaction_id = #{transactionId,jdbcType=VARCHAR},
      </if>
      <if test="outTradeNo != null">
        out_trade_no = #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="refundId != null">
        refund_id = #{refundId,jdbcType=VARCHAR},
      </if>
      <if test="outRefundNo != null">
        out_refund_no = #{outRefundNo,jdbcType=VARCHAR},
      </if>
      <if test="totalFee != null">
        total_fee = #{totalFee,jdbcType=INTEGER},
      </if>
      <if test="settlementTotalFee != null">
        settlement_total_fee = #{settlementTotalFee,jdbcType=INTEGER},
      </if>
      <if test="refundFee != null">
        refund_fee = #{refundFee,jdbcType=INTEGER},
      </if>
      <if test="settlementRefundFee != null">
        settlement_refund_fee = #{settlementRefundFee,jdbcType=INTEGER},
      </if>
      <if test="refundStatus != null">
        refund_status = #{refundStatus,jdbcType=VARCHAR},
      </if>
      <if test="successTime != null">
        success_time = #{successTime,jdbcType=VARCHAR},
      </if>
      <if test="refundRecvAccout != null">
        refund_recv_accout = #{refundRecvAccout,jdbcType=VARCHAR},
      </if>
      <if test="refundAccount != null">
        refund_account = #{refundAccount,jdbcType=VARCHAR},
      </if>
      <if test="refundRequestSource != null">
        refund_request_source = #{refundRequestSource,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.marquess.demo.model.RefundResult">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 06 16:21:59 CST 2018.
    -->
    update refund_result
    set transaction_id = #{transactionId,jdbcType=VARCHAR},
      out_trade_no = #{outTradeNo,jdbcType=VARCHAR},
      refund_id = #{refundId,jdbcType=VARCHAR},
      out_refund_no = #{outRefundNo,jdbcType=VARCHAR},
      total_fee = #{totalFee,jdbcType=INTEGER},
      settlement_total_fee = #{settlementTotalFee,jdbcType=INTEGER},
      refund_fee = #{refundFee,jdbcType=INTEGER},
      settlement_refund_fee = #{settlementRefundFee,jdbcType=INTEGER},
      refund_status = #{refundStatus,jdbcType=VARCHAR},
      success_time = #{successTime,jdbcType=VARCHAR},
      refund_recv_accout = #{refundRecvAccout,jdbcType=VARCHAR},
      refund_account = #{refundAccount,jdbcType=VARCHAR},
      refund_request_source = #{refundRequestSource,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into refund_result
    (transaction_id, out_trade_no, refund_id, out_refund_no, total_fee, settlement_total_fee, 
      refund_fee, settlement_refund_fee, refund_status, success_time, refund_recv_accout, 
      refund_account, refund_request_source, create_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.transactionId,jdbcType=VARCHAR}, #{item.outTradeNo,jdbcType=VARCHAR}, #{item.refundId,jdbcType=VARCHAR}, 
        #{item.outRefundNo,jdbcType=VARCHAR}, #{item.totalFee,jdbcType=INTEGER}, #{item.settlementTotalFee,jdbcType=INTEGER}, 
        #{item.refundFee,jdbcType=INTEGER}, #{item.settlementRefundFee,jdbcType=INTEGER}, 
        #{item.refundStatus,jdbcType=VARCHAR}, #{item.successTime,jdbcType=VARCHAR}, #{item.refundRecvAccout,jdbcType=VARCHAR}, 
        #{item.refundAccount,jdbcType=VARCHAR}, #{item.refundRequestSource,jdbcType=VARCHAR}, 
        #{item.createTime,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into refund_result (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'transaction_id'.toString() == column.value">
          #{item.transactionId,jdbcType=VARCHAR}
        </if>
        <if test="'out_trade_no'.toString() == column.value">
          #{item.outTradeNo,jdbcType=VARCHAR}
        </if>
        <if test="'refund_id'.toString() == column.value">
          #{item.refundId,jdbcType=VARCHAR}
        </if>
        <if test="'out_refund_no'.toString() == column.value">
          #{item.outRefundNo,jdbcType=VARCHAR}
        </if>
        <if test="'total_fee'.toString() == column.value">
          #{item.totalFee,jdbcType=INTEGER}
        </if>
        <if test="'settlement_total_fee'.toString() == column.value">
          #{item.settlementTotalFee,jdbcType=INTEGER}
        </if>
        <if test="'refund_fee'.toString() == column.value">
          #{item.refundFee,jdbcType=INTEGER}
        </if>
        <if test="'settlement_refund_fee'.toString() == column.value">
          #{item.settlementRefundFee,jdbcType=INTEGER}
        </if>
        <if test="'refund_status'.toString() == column.value">
          #{item.refundStatus,jdbcType=VARCHAR}
        </if>
        <if test="'success_time'.toString() == column.value">
          #{item.successTime,jdbcType=VARCHAR}
        </if>
        <if test="'refund_recv_accout'.toString() == column.value">
          #{item.refundRecvAccout,jdbcType=VARCHAR}
        </if>
        <if test="'refund_account'.toString() == column.value">
          #{item.refundAccount,jdbcType=VARCHAR}
        </if>
        <if test="'refund_request_source'.toString() == column.value">
          #{item.refundRequestSource,jdbcType=VARCHAR}
        </if>
        <if test="'create_time'.toString() == column.value">
          #{item.createTime,jdbcType=VARCHAR}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>